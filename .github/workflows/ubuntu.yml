name: Ubuntu
# Qt官方没有linux平台的x86包
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on: 
  # workflow_run:
  #   workflows: [AutoTag]
  #   types: [completed]
  workflow_dispatch:
  push:
    branches:
      - dev
      - master
      # - staged
    paths-ignore:
      - 'docs/**'
      - ".github/**"
      - "howto/**"
      - "*.md"
      - ".clang-format"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        qt_ver: [5.15.2]
        qt_arch: [gcc_64]
    env:
      version: 23.06.02
      version-suffix: alpha
      prerelease: true
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          cached: 'false'
          modules: qtwebengine
      - name: ubuntu install thirdparty dependencies
        run: |
          sudo apt-get install git pkg-config build-essential qt5-qmake 
          sudo apt-get install libvorbis-dev zlib1g-dev libhunspell-dev x11proto-record-dev 
          sudo apt-get install qtdeclarative5-dev libxtst-dev liblzo2-dev libbz2-dev 
          sudo apt-get install libavutil-dev libavformat-dev libeb16-dev
          sudo apt-get install libqt5webkit5-dev libqt5svg5-dev libqt5x11extras5-dev qttools5-dev 
          sudo apt-get install qttools5-dev-tools qtmultimedia5-dev libqt5multimedia5-plugins doxygen libzstd-dev libspeechd-dev #libopencc-dev
          sudo ln -sf /usr/bin/x86_64-linux-gnu-ld.gold /usr/bin/ld
          sudo apt install libxapian-dev
          sudo apt install libfuse2
          git clone https://github.com/BYVoid/OpenCC
          pwd
          cd OpenCC/
          make PREFIX=/usr -j$(nproc)
          sudo make install
          cd ..
          sudo apt-get install libzim-dev
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
          submodules: true

      - name: version-file
        shell: bash
        run: |   
          previousTag=$(git tag --sort=-creatordate | sed -n 1p |cut -c 2-)
          echo "$previousTag">version.txt
          
      - name: build goldendict
        run: |
          qmake CONFIG+=release PREFIX=/usr CONFIG+=zim_support CONFIG+=chinese_conversion_support CONFIG+=use_iconv CONFIG+=use_xapian
          make INSTALL_ROOT=appdir -j`nproc` install; find appdir/

          #copy missing shared dll to appdir.
          mkdir -p appdir/usr/lib
          cp  $(ldd appdir/usr/bin/goldendict | grep -o '\W/[^ ]*' |grep gobject ) appdir/usr/lib
          cp  $(ldd appdir/usr/bin/goldendict | grep -o '\W/[^ ]*' |grep libpango ) appdir/usr/lib

      - name: Build AppImage
        run: |
          wget -c -nv "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
          chmod a+x linuxdeploy-plugin-qt-x86_64.AppImage
          wget -c -nv "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          chmod a+x linuxdeploy-x86_64.AppImage
          ./linuxdeploy-x86_64.AppImage --appdir appdir --output appimage --plugin qt  -i redist/icons/goldendict.png -d redist/org.xiaoyifang.GoldenDict_NG.desktop 

      - name: changelog
        id: changelog
        run: |   
          previousTag=$(git tag --sort=-creatordate | sed -n 2p)
          echo "previousTag : $previousTag"
          
          CHANGELOG="$(git log --oneline --no-decorate $previousTag..HEAD)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          CHANGELOG="${CHANGELOG//'\"'/'%22'}"
          CHANGELOG="${CHANGELOG//"'"/ }"
          echo "::set-output name=changelog::$(echo "$CHANGELOG")"
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short=8 HEAD)"    
          echo "::set-output name=release_date::$(date +'%Y%m%d')"    
          echo "::set-output name=release_time::$(date +'%H%M%S')"  
          echo "::set-output name=release_time_clock::$(date +'%H:%M:%S')"   
          echo "::set-output name=release_hm::$(date +'%y%m%d')"  
          echo "::set-output name=appname::$(ls *.AppImage*)"

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@{latest-release}
      - name: uploadRelease
        # if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.vars.outputs.appname }}
          asset_name: ${{ matrix.qt_ver }}-${{ steps.vars.outputs.appname }}
          tag: v${{env.version}}-${{env.version-suffix}}.${{ steps.vars.outputs.release_hm }}.${{ steps.vars.outputs.sha_short }}
          overwrite: true
          release_name: GoldenDict-ng-v${{env.version}}-${{env.version-suffix}}.${{ steps.vars.outputs.release_hm }}.${{ steps.vars.outputs.sha_short }}
          prerelease: ${{env.prerelease}}
          body: |
            release on date:      ${{steps.vars.outputs.release_date}} time: ${{steps.vars.outputs.release_time_clock}}  
            branch:               ${{ github.ref_name }}
            commit:               ${{ steps.vars.outputs.sha_short }} 
            Qt version:           Qt5.15.2, Qt6.X  
            Windows built with:   msvc64,  Visual studio 2019
            ## goldendict.exe can not be used alone 
            if you have a previous version. replace this maybe ok. if not ,download the whole bundle.
            
            AppImage built with:  Ubuntu-20.04 ,latest gcc
            macos built with:     macos-10.15,macos-11.0,clang_64 x86_64
                                  Qt6.X(Universal Build)
                                  Qt5.15.2(Intel Kind)
            auto built by github action. use on your on risk:-)
            **recommend version**:Qt6.X   (with the latest bug fixes and performance enhancements)  

            Filename pattern: **[Qt version]-GoldenDict-[OS]-[release-date].[ext]**
            [xapian](https://xapian.org/)  is enabled by default which offers 10X~20X performance 
            ------------------------------
            文件名的模式: **[Qt version]-GoldenDict-[OS]-[release-date].[ext]** 
            [xapian](https://xapian.org/) 用于全文索引的创建，提供更快的全文索引创建、搜索支持
            比如：
            6.4.3-GoldenDict.exe_windows-2022_20230502.zip
            表示基于qt6.4.3，windows-2022,  于20230502日创建的版本。


            CHANGES:
            ${{ steps.changelog.outputs.changelog }}  
            ${{steps.build_changelog.outputs.changelog}}
